---
swagger: '2.0'
info:
  version: 1.0.0
  title: GeoServer Filter Chain REST API
  description: Manage the filter chain configuration (whole block and per-chain operations).
  contact:
    name: GeoServer
    email: geoserver-users@osgeo.org
    url: https://geoserver.org/comm/
host: localhost:8080
basePath: /geoserver/rest/security
schemes: [http, https]

securityDefinitions:
  basicAuth:
    type: basic
    description: Admin user credentials.

tags:
  - name: FilterChain
    description: Filter chain configuration endpoints

paths:
  /filterChain:
    get:
      tags: [FilterChain]
      security:
        - basicAuth: []
      summary: Get the entire filterChain block.
      produces: [application/xml]
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/FilterChainList'
          examples:
            application/xml: |
              <filterChain>
                <filters name="web" class="org.geoserver.security.HtmlLoginFilterChain"
                         interceptorName="interceptor" exceptionTranslationName="exception"
                         path="/web/**,/gwc/rest/web/**,/" disabled="false"
                         allowSessionCreation="true" ssl="false" matchHTTPMethod="false">
                  <filter>rememberme</filter>
                  <filter>form</filter>
                  <filter>anonymous</filter>
                </filters>
                <filters name="rest" class="org.geoserver.security.ServiceLoginFilterChain"
                         interceptorName="restInterceptor" exceptionTranslationName="exception"
                         path="/rest.*,/rest/**" disabled="false"
                         allowSessionCreation="false" ssl="false" matchHTTPMethod="false">
                  <filter>basic</filter>
                  <filter>anonymous</filter>
                </filters>
              </filterChain>
        403:
          description: Forbidden
        500:
          description: Internal Server Error
    put:
      tags: [FilterChain]
      security:
        - basicAuth: []
      summary: Replace the entire filterChain block atomically.
      consumes: [application/xml]
      produces: [application/xml]
      parameters:
        - in: body
          name: body
          required: true
          description: Entire `<filterChain>` document.
          schema:
            $ref: '#/definitions/FilterChainList'
      responses:
        200:
          description: Updated filterChain.
          schema:
            $ref: '#/definitions/FilterChainList'
        400:
          description: 'Malformed request (duplicates, invalid values)'
        403:
          description: Forbidden
        500:
          description: Internal Server Error
    post:
      tags: [FilterChain]
      security:
        - basicAuth: []
      summary: Create a new filter chain (optionally at a specific position).
      consumes: [application/xml]
      produces: [application/xml]
      parameters:
        - in: query
          name: position
          type: integer
          required: false
          description: Zero-based index to insert the new chain at (defaults to append).
        - in: body
          name: body
          required: true
          description: Single `<filters ...>` element with child `<filter>` items.
          schema:
            $ref: '#/definitions/FilterChainItem'
      responses:
        201:
          description: Created. The Location header points to the new resource.
          headers:
            Location:
              type: string
              description: URL of the created chain.
          schema:
            $ref: '#/definitions/FilterChainItem'
        400:
          description: 'Malformed request or duplicate name'
        403:
          description: Forbidden
        500:
          description: Internal Server Error

  /filterChain/order:
    put:
      tags: [FilterChain]
      security:
        - basicAuth: []
      summary: Reorder existing chains by name (must be an exact permutation).
      consumes: [application/json]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChainOrderRequest'
      responses:
        200:
          description: Order updated
        400:
          description: The order is not an exact permutation of current names
        403:
          description: Forbidden
        500:
          description: Internal Server Error

  /filterChain/{chainName}:
    get:
      tags: [FilterChain]
      security:
        - basicAuth: []
      summary: View a single filter chain.
      produces: [application/xml]
      parameters:
        - in: path
          name: chainName
          type: string
          required: true
          description: Name of the chain to retrieve (literal "order" is reserved).
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/FilterChainItem'
          examples:
            application/xml: |
              <filters name="web" class="org.geoserver.security.HtmlLoginFilterChain"
                       interceptorName="interceptor" exceptionTranslationName="exception"
                       path="/web/**,/gwc/rest/web/**,/" disabled="false"
                       allowSessionCreation="true" ssl="false" matchHTTPMethod="false">
                <filter>rememberme</filter>
                <filter>form</filter>
                <filter>anonymous</filter>
              </filters>
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal Server Error
    put:
      tags: [FilterChain]
      security:
        - basicAuth: []
      summary: Update a single filter chain (optionally move position).
      consumes: [application/xml]
      produces: [application/xml]
      parameters:
        - in: path
          name: chainName
          type: string
          required: true
          description: Name of the chain to update (must match the payload name).
        - in: query
          name: position
          type: integer
          required: false
          description: Zero-based index to move this chain to.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FilterChainItem'
      responses:
        200:
          description: Updated chain.
          schema:
            $ref: '#/definitions/FilterChainItem'
        400:
          description: Malformed request or name mismatch
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal Server Error
    delete:
      tags: [FilterChain]
      security:
        - basicAuth: []
      summary: Delete a single filter chain.
      parameters:
        - in: path
          name: chainName
          type: string
          required: true
          description: Name of the chain to delete.
      responses:
        200:
          description: Deleted
        403:
          description: Forbidden
        410:
          description: Gone (did not exist or already removed)
        500:
          description: Internal Server Error

definitions:
  FilterChainList:
    type: object
    xml:
      name: filterChain
    properties:
      filters:
        type: array
        xml:
          name: filters
          wrapped: false
        items:
          $ref: '#/definitions/FilterChainItem'

  FilterChainItem:
    type: object
    xml:
      name: filters
    properties:
      name:
        type: string
        xml:
          attribute: true
      class:
        type: string
        description: Fully qualified chain class
        xml:
          attribute: true
      path:
        type: string
        description: Comma-separated list of URL patterns
        example: "/web/**,/gwc/rest/web/**,/"
        xml:
          attribute: true
      disabled:
        type: boolean
        xml:
          attribute: true
      allowSessionCreation:
        type: boolean
        xml:
          attribute: true
      ssl:
        type: boolean
        description: Require SSL (maps to internal requireSSL flag)
        xml:
          attribute: true
      matchHTTPMethod:
        type: boolean
        xml:
          attribute: true
      interceptorName:
        type: string
        xml:
          attribute: true
      exceptionTranslationName:
        type: string
        xml:
          attribute: true
      roleFilterName:
        type: string
        xml:
          attribute: true
      filter:
        type: array
        description: Repeated filter names (applied in order)
        xml:
          name: filter
          wrapped: false
        items:
          type: string
    required:
      - name
      - class
      - path
      - disabled
      - allowSessionCreation
      - ssl
      - matchHTTPMethod
      - filter

  ChainOrderRequest:
    type: object
    properties:
      order:
        type: array
        items:
          type: string
    required: [order]
