#
# (c) 2018 Open Source Geospatial Foundation - all rights reserved
# This code is licensed under the GPL 2.0 license, available at the root
# application directory.
#
org.geoserver.security.oauth2.login.GeoServerOAuth2LoginAuthenticationFilter.name=OAuth2 / OpenID Connect Login
org.geoserver.security.oauth2.login.GeoServerOAuth2LoginAuthenticationFilter.title=Interactive authentication using OAuth2 or OpenID Connect

OAuth2LoginAuthProviderPanel.description=Interactive authentication using OAuth2 or OpenID Connect

OAuth2LoginAuthProviderPanel.geoserverParameters=Common Login Settings

OAuth2LoginAuthProviderPanel.baseRedirectUri=Redirect Base URI
OAuth2LoginAuthProviderPanel.baseRedirectUriHelp.title=Redirect Base URI
OAuth2LoginAuthProviderPanel.baseRedirectUriHelp=Specifies the URI under which the GeoServer \
can be reached by users who want to log in with OAuth2 / OpenID Connect. \
<p>A public URI is not necessarily required, but the URI must be equally accessible for these users.</p>\
<p>The URI must end with the context path used by the GeoServer, typically "/geoserver". </p>\
<p>After entering the URI, the provider-specific redirect URIs listed below are automatically updated.</p>

OAuth2LoginAuthProviderPanel.postLogoutRedirectUri=After-Logout Redirect URI (Register with the provider)
OAuth2LoginAuthProviderPanel.postLogoutRedirectUriHelp.title=After-Logout Redirect URI
OAuth2LoginAuthProviderPanel.postLogoutRedirectUriHelp=The URI to which the user should be \
redirected from the OAuth2 / OpenID provider once a global logout has been completed. \
<p>Attention: When registering the GeoServer as an application with the OAuth2 / OpenID \
Connect provider, the URIs to which the provider may forward the user must be specified. \
If you store a URI here, it must also be stored as a permitted URI with the provider.</p>

OAuth2LoginAuthProviderPanel.enableRedirectAuthenticationEntryPoint=Skip GeoServer login dialog
OAuth2LoginAuthProviderPanel.enableRedirectAuthenticationEntryPointHelp.title=Skip GeoServer login dialog
OAuth2LoginAuthProviderPanel.enableRedirectAuthenticationEntryPointHelp=Activate this option to \
redirect users who are not logged in directly to the login page of the OAuth2 / OpenID Connect \
Provider. The GeoServer login page is skipped. <p>If only one provider is activated and this \
provider is to be used in all cases, this option can be used.</p><p>Attention: This means that \
it is no longer possible to log in with a local account. Affects the FilterChains for \
which this filter is activated.</p><p>This is only a convenience function. If in doubt, \
leave deactivated.</p>

OAuth2LoginAuthProviderPanel.enabled=Enabled
OAuth2LoginAuthProviderPanel.providerHeadline={0} Login
OAuth2LoginAuthProviderPanel.infoFromProvider=Information from {0}
OAuth2LoginAuthProviderPanel.infoForProvider=Information for {0}
OAuth2LoginAuthProviderPanel.connectionFromParametersHelp.title=Information from Provider
OAuth2LoginAuthProviderPanel.connectionFromParametersHelp=The GeoServer must be registered as \
an application with the OAuth2 / OpenID Connect provider by an authorized administrator. \
The ClientId and ClientSecret are defined during registration. \
This information must be communicated to the GeoServer.
OAuth2LoginAuthProviderPanel.connectionForParametersHelp.title=Information for Provider
OAuth2LoginAuthProviderPanel.connectionForParametersHelp=When registering the GeoServer as \
an application with the OAuth2 / OpenID Connect provider, some information must be provided, \
including the information specified in this section.

OAuth2LoginAuthProviderPanel.protocolSettings=Protocol Settings
OAuth2LoginAuthProviderPanel.userNameAttribute=User name attribute
OAuth2LoginAuthProviderPanel.userNameAttributeHelp.title=Key identifying the user name
OAuth2LoginAuthProviderPanel.userNameAttributeHelp=The OAuth2 server replies to user verification with a JSON document, \
  this entry specifies with JSON key should be used as user name in GeoServer

OAuth2LoginAuthProviderPanel.oidcAdvancedSettings=Advanced Settings
OAuth2LoginAuthProviderPanel.oidcAdvancedSettingsHelp.title=Advanced Settings
OAuth2LoginAuthProviderPanel.oidcAdvancedSettingsHelp=In most cases, the default values can be retained.

OAuth2LoginAuthProviderPanel.oidcProviderSettings=Provider-specific Settings
OAuth2LoginAuthProviderPanel.oidcProviderSettingsHelp.title=Provider-specific Settings
OAuth2LoginAuthProviderPanel.oidcProviderSettingsHelp=Some OpenID Connect providers require a special configuration, which can be carried out here.
# Login buttons tool tips
OAuth2LoginAuthProviderPanel.googleDescription=Login with Google
OAuth2LoginAuthProviderPanel.gitHubDescription=Login with GitHub
OAuth2LoginAuthProviderPanel.msDescription=Login with Microsoft Azure
OAuth2LoginAuthProviderPanel.oidcDescription=Login with OpenID Connect

OAuth2LoginAuthProviderPanel.login=OpenID Connect Login
OAuth2LoginAuthProviderPanel.logout=OpenID Connect Logout
OAuth2LoginAuthProviderPanel.short=OpenID Connect Login
OAuth2LoginAuthProviderPanel.title=Authentication using OpenID Connect

OAuth2LoginAuthProviderPanel.connectionParameters=OpenID Connect provider connection
OAuth2LoginAuthProviderPanel.connectionParametersHelp.title=OpenID Connect provider connection
OAuth2LoginAuthProviderPanel.connectionParametersHelp=<p>The URIs of the OpenID Connect token service and user authorization.</p>

OAuth2LoginAuthProviderPanel.oidcForceTokenUriHttps=Force Access Token URI HTTPS Secured Protocol
OAuth2LoginAuthProviderPanel.oidcTokenUri=Access Token URI
OAuth2LoginAuthProviderPanel.oidcTokenUriHelp.title=Access Token URI
OAuth2LoginAuthProviderPanel.oidcTokenUriHelp=The URI to use to obtain an OAuth2 access token.

OAuth2LoginAuthProviderPanel.oidcForceAuthorizationUriHttps=Force User Authorization URI HTTPS Secured Protocol
OAuth2LoginAuthProviderPanel.oidcAuthorizationUri=User Authorization URI
OAuth2LoginAuthProviderPanel.oidcAuthorizationUriHelp.title=User Authorization URI
OAuth2LoginAuthProviderPanel.oidcAuthorizationUriHelp=The URI to which the user is to be redirected to authorize an access token.

OAuth2LoginAuthProviderPanel.redirectUri=Redirect URI
OAuth2LoginAuthProviderPanel.redirectUriHelp.title=Redirect URI
OAuth2LoginAuthProviderPanel.redirectUriHelp=When registering the GeoServer as an application \
with the OAuth2 / OpenID Connect provider, it must be specified to which URI the provider \
may forward the user if the login was successful. Use the adjacent URI for this purpose.\
<p>The URI is automatically determined from the "Redirect Base URI" entered above. \
Adjust the "Redirect Base URI" accordingly. </p><p>Background: The GeoServer uses a specific \
URI for each active provider in order to be able to assign the login to a provider.</p> 
 
OAuth2LoginAuthProviderPanel.oidcUserInfoUri=User Info URI
OAuth2LoginAuthProviderPanel.oidcUserInfoUriHelp.title=User Info URI
OAuth2LoginAuthProviderPanel.oidcUserInfoUriHelp=Used to load user information in case of an OAuth2 provider not supporting to issue OpenID Connect ID-Tokens. validate the <b>access_token</b>

OAuth2LoginAuthProviderPanel.oidcLogoutUri=Logout URI
OAuth2LoginAuthProviderPanel.oidcLogoutUriHelp.title=Logout URI
OAuth2LoginAuthProviderPanel.oidcLogoutUriHelp=The URI to which the user is to be redirected when performing a logout.

OAuth2LoginAuthProviderPanel.scopes=Scopes
OAuth2LoginAuthProviderPanel.scopesHelp.title=Scopes
OAuth2LoginAuthProviderPanel.scopesHelp=<p>The comma-separated scopes of this resource.</p>  \
 <p>Scopes are needed in order to ask the OAuth2 Provider for user details, which will be used to authorize him.</p>

OAuth2LoginAuthProviderPanel.clientId=Client ID
OAuth2LoginAuthProviderPanel.clientIdHelp.title=Client ID
OAuth2LoginAuthProviderPanel.clientIdHelp=The client identifier to use for this protected resource.

OAuth2LoginAuthProviderPanel.clientSecret=Client Secret
OAuth2LoginAuthProviderPanel.clientSecretHelp.title=Client Secret
OAuth2LoginAuthProviderPanel.clientSecretHelp=The client secret key, provided by the OAuth2 Provider.

DiscoveryPanel.discovery=OpenID Discovery document
DiscoveryPanel.discover=Discover
DiscoveryPanel.oidcDiscoveryUriKeyHelp.title=Discovery
DiscoveryPanel.oidcDiscoveryUriKeyHelp=<p>Automatically fill in the connection parameters from a OpenID Discovery document</p>
DiscoveryPanel.discoveryError=Could not look-up discovery information: {0}


OAuth2LoginAuthProviderPanel.oidcJwkSetUri=JSON Web Key Set URI
OAuth2LoginAuthProviderPanel.oidcJwkSetUriHelp.title=JSON Web Key Set URI
OAuth2LoginAuthProviderPanel.oidcJwkSetUriHelp=Link to a set of JSON Web Keys, as a JSON document. Used to validate the Id Token signature. 

OAuth2LoginAuthProviderPanel.oidcEnforceTokenValidation=Enforce Token Validation
OAuth2LoginAuthProviderPanel.oidcEnforceTokenValidationHelp.title=Enforce Token Validation
OAuth2LoginAuthProviderPanel.oidcEnforceTokenValidationHelp=Check this option to enforce the validation of the token signature.

OAuth2LoginAuthProviderPanel.oidcResponseMode=Response Mode
OAuth2LoginAuthProviderPanel.oidcResponseModeHelp.title=Response Mode
OAuth2LoginAuthProviderPanel.oidcResponseModeHelp=Tells the OpenID Connect provider how \
to transfer the authorization code. GeoServer requires a transmission as query parameter. \
<p>For some providers, this transmission type must be set explicitly. Currently, for example, \
the Active Directory Foundation Services (ADFS). Enter "query" for these providers.</p>

OAuth2LoginAuthProviderPanel.oidcAuthenticationMethodPostSecret=Send Client Secret in Token Request as POST
OAuth2LoginAuthProviderPanel.oidcAuthenticationMethodPostSecretHelp.title=Send Client Secret in Token Request as POST
OAuth2LoginAuthProviderPanel.oidcAuthenticationMethodPostSecretHelp= Check this option if the \
OpenID Connect provider requires GeoServer to send the client secret as part of the POST body \
in the token request (e.g. ADFS) rather than basic authentication, which is the default.

OAuth2LoginAuthProviderPanel.oidcUsePKCE=Proof Key of Code Exchange
OAuth2LoginAuthProviderPanel.oidcUsePKCE=Use PKCE
OAuth2LoginAuthProviderPanel.oidcUsePKCEHelp.title=Use Proof Key of Code Exchange
OAuth2LoginAuthProviderPanel.oidcUsePKCEHelp=Use Proof Key of Code Exchange (PKE) as an additional guard against code interception.\
  The client generates a code_verifier to be added to the OAuth authorization URI. The code_verifier is used in the final \
  authorization code for token exchange. The use of PKCE is recommended in cases where client code is public and use of \
  client id and a client secret may be discovered.

OAuth2LoginAuthProviderPanel.oidcAllowUnSecureLogging=Log Sensitive Information (do not use in production)
OAuth2LoginAuthProviderPanel.oidcAllowUnSecureLoggingHelp.title=Log Sensitive Information
OAuth2LoginAuthProviderPanel.oidcAllowUnSecureLoggingHelp=Check this option if you want to log more sensitive information \
(i.e. tokens). This is useful when debugging an OIDC configuration that isn't working correctly.


OAuth2LoginAuthProviderPanel.authorization=Authorization

RoleSource.IdToken=ID Token
RoleSource.AccessToken=Access Token
RoleSource.UserInfo=UserInfo Endpoint
RoleSource.MSGraphAPI=Microsoft Graph API (Entra ID)

TokenClaimPanel=Token roles claim


org.geoserver.web.security.oauth2.OAuth2ResourceServerAuthProviderPanel.name=OAuth2 Resource Server
org.geoserver.web.security.oauth2.OAuth2ResourceServerAuthProviderPanel.title=Authentication using OAuth2 Bearer Tokens

OAuth2ResourceServerAuthProviderPanel.short=OAuth2 Resource Server
OAuth2ResourceServerAuthProviderPanel.title=OAuth2 Resource Server Authentication
OAuth2ResourceServerAuthProviderPanel.description=Turn GeoServer into OAuth2 Resource Server using Bearer Tokens

OAuth2ResourceServerAuthProviderPanel.resourceServerParameters=Resource Server properties
OAuth2ResourceServerAuthProviderPanel.resourceServerParametersHelp=TODO
OAuth2ResourceServerAuthProviderPanel.resourceServerParametersHelp.title=TODO

OAuth2ResourceServerAuthProviderPanel.issuerUri=Issuer URI
OAuth2ResourceServerAuthProviderPanel.issuerUriHelp=TODO
OAuth2ResourceServerAuthProviderPanel.issuerUriHelp.title=TODO


