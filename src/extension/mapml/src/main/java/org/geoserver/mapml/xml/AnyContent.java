//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2018.12.17 at 04:13:52 PM PST
//

package org.geoserver.mapml.xml;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAnyElement;
import jakarta.xml.bind.annotation.XmlMixed;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

/**
 * Java class for any_content complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="any_content"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;group ref="{}any_element" maxOccurs="unbounded" minOccurs="0"/&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(
        name = "any_content",
        propOrder = {"anyElement"})
@XmlSeeAlso({PropertyContent.class})
public class AnyContent {

    @XmlMixed
    @XmlAnyElement(lax = true)
    protected List<Object> anyElement;

    /**
     * Gets the value of the anyElement property.
     *
     * <p>This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make
     * to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method
     * for the anyElement property.
     *
     * <p>For example, to add a new item, do as follows:
     *
     * <pre>
     *    getAnyElement().add(newItem);
     * </pre>
     *
     * <p>Objects of the following type(s) are allowed in the list: String and DOM Element
     */
    public String getAnyElement() {
        if (anyElement == null || anyElement.isEmpty()) {
            return null;
        }
        return anyElement.get(0).toString();
    }

    public void setAnyElement(String content) {
        if (this.anyElement == null) {
            this.anyElement = new ArrayList<>();
        }
        this.anyElement.clear();
        if (content != null) {
            try {
                // Parse the HTML/XML string into DOM nodes
                DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
                factory.setNamespaceAware(true);
                DocumentBuilder builder = factory.newDocumentBuilder();

                // Wrap in a root element to parse as valid XML
                String wrapped = "<wrapper>" + content + "</wrapper>";
                Document doc = builder.parse(new InputSource(new StringReader(wrapped)));

                // Get the child nodes of the wrapper (the actual content)
                NodeList nodes = doc.getDocumentElement().getChildNodes();
                for (int i = 0; i < nodes.getLength(); i++) {
                    Node node = nodes.item(i);
                    // Import the node into a new document fragment to avoid wrong document errors
                    this.anyElement.add(node);
                }
            } catch (Exception e) {
                // If parsing fails, fall back to adding as string (will be escaped)
                this.anyElement.add(content);
            }
        }
    }
}
